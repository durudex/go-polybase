// Code generated by github.com/v1def/go-polybase. DO NOT EDIT.

package generated

import (
	"context"

	"github.com/v1def/go-polybase"
)

type City struct {
	Id      string  `json:"id"`
	Name    string  `json:"name"`
	Country *string `json:"country"`
}
type ICity interface {
	Constructor(ctx context.Context, input *CityConstructorInput)
	SetCountry(ctx context.Context, id string, input *CitySetCountryInput)
	UpdateName(ctx context.Context, id string, input *CityUpdateNameInput)
}

type city struct{ coll polybase.Collection }

func NewCity(db polybase.Polybase) ICity {
	return &city{coll: db.Collection("V-City/City")}
}

type CityConstructorInput struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

func (c *city) Constructor(ctx context.Context, input *CityConstructorInput) {}

type CitySetCountryInput struct {
	Country string `json:"country"`
}

func (c *city) SetCountry(ctx context.Context, id string, input *CitySetCountryInput) {}

type CityUpdateNameInput struct {
	Name string `json:"name"`
}

func (c *city) UpdateName(ctx context.Context, id string, input *CityUpdateNameInput) {}
